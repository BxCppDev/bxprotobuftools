# - Config file for the Protobuftools package
# It defines the following variables
#  BxProtobuftools_DEFINITIONS   - compile definitions needed to use Bayeux/Protobuftools
#  BxProtobuftools_INCLUDE_DIRS  - include directories for Bayeux/Protobuftools
#  BxProtobuftools_LIBRARIES     - libraries to link against
#  BxProtobuftools_BOOST_VERSION - Boost version
#  BxProtobuftools_PROTOBUF_VERSION - Protobuf version
#  BxProtobuftools_PROTOBUF_ROOT    - Protobuf installation root directory
#

#----------------------------------------------------------------------
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#----------------------------------------------------------------------

message( STATUS "[info] BxProtobuftoolsConfig: Entering")

#-----------------------------------------------------------------------
# Locate ourselves, since all our config files should have been installed
# alongside us...
#
get_filename_component(__bxprotobuftools_config_dir "${CMAKE_CURRENT_LIST_FILE}" PATH)
message(STATUS "[info] BxProtobuftoolsConfig: BxProtobuftools CMake config in '${__bxprotobuftools_config_dir}'")

set(BxProtobuftools_VERSION @BxProtobuftools_VERSION@)
message( STATUS "[info] BxProtobuftoolsConfig: BxProtobuftools_VERSION = '${BxProtobuftools_VERSION}'")

# - Boost
set(BxProtobuftools_BOOST_VERSION    @BxProtobuftools_BOOST_VERSION@)
set(BxProtobuftools_BOOST_COMPONENTS @BXPROTOBUFTOOLS_BOOST_COMPONENTS@)
set(BxProtobuftools_BOOST_CONFIG     @Boost_USE_CONFIG@)
message(STATUS "[info] BxProtobuftoolsConfig: Searching for Boost version ${BxProtobuftools_BOOST_VERSION} with 'MODULE' mode...")
set(Boost_NO_BOOST_CMAKE ON)
find_package(Boost ${BxProtobuftools_BOOST_VERSION} EXACT
  REQUIRED
  ${BxProtobuftools_BOOST_COMPONENTS}
  )
message(STATUS "[info] BxProtobuftoolsConfig: Found Boost version ${Boost_VERSION}")

# - Protobuf
set(BxProtobuftools_PROTOBUF_VERSION @PROTOBUF_VERSION_STRING@)
set(BxProtobuftools_PROTOBUF_ROOT    @PROTOBUF_ROOT@)
# - Load Custom Modules
list(INSERT CMAKE_MODULE_PATH 0 "${__bxprotobuftools_config_dir}/@BXPROTOBUFTOOLS_CMAKEDIR_TO_RESOURCEDIR@/cmake/Modules")
set(PROTOBUF_ROOT ${BxProtobuftools_PROTOBUF_ROOT})
message(STATUS "[debug] BxProtobuftoolsConfig: PROTOBUF_ROOT = '${PROTOBUF_ROOT}'")
message(STATUS "[debug] BxProtobuftoolsConfig: Searching Protobuf version ${BxProtobuftools_PROTOBUF_VERSION} from '${PROTOBUF_ROOT}'...")
set(Protobuf_FIND_COMPONENTS "JavaJar;JavaUtilJar")
find_package(Protobuf ${BxProtobuftools_PROTOBUF_VERSION} REQUIRED
  MODULE
  COMPONENTS @Protobuf_FIND_COMPONENTS@
  )

#-----------------------------------------------------------------------
# Build option
set(BxProtobuftools_DEFINITIONS @BXPROTOBUFTOOLS_DEFINITIONS@)
message(STATUS "[info] BxProtobuftoolsConfig: BxJsontools_DEFINITIONS = '${BxProtobuftools_DEFINITIONS}'")
if(CMAKE_COMPILER_IS_GNUCXX)
  set(CMAKE_CXX_FLAGS ${BxProtobuftools_DEFINITIONS})
endif()

#-----------------------------------------------------------------------
# Hard code paths to headers
#

set(BxProtobuftools_INCLUDE_DIR "${__bxprotobuftools_config_dir}/@BXPROTOBUFTOOLS_CMAKEDIR_TO_INCLUDEDIR@")
mark_as_advanced(BxProtobuftools_INCLUDE_DIR)

set(BxProtobuftools_INCLUDE_DIRS
  "${BxProtobuftools_INCLUDE_DIR}"
  "${BxProtobuftools_INCLUDE_DIR}/bayeux"
  "${BxProtobuftools_INCLUDE_DIR}/bayeux/proto"
  ${PROTOBUF_INCLUDE_DIRS}
  ${Boost_INCLUDE_DIRS}
)

#-----------------------------------------------------------------------
# Handle paths/targets for third party deps here...

#-----------------------------------------------------------------------
# Include the file listing all the imported targets.
# This is installed in the same location as us...
#
if(NOT BxProtobuftools_TARGETS_LOADED)
  include("${__bxprotobuftools_config_dir}/BxProtobuftoolsTargets.cmake")
  set(BxProtobuftools_TARGETS_LOADED 1)
endif()

# - BxProtobuftools itself
set(BxProtobuftools_LIBRARY Bayeux_protobuftools CACHE FILE "BxProtobuftools library (imported)")
mark_as_advanced(BxProtobuftools_LIBRARY)

set(BxProtobuftools_LIBRARIES
  ${BxProtobuftools_LIBRARY}
  ${PROTOBUF_LIBRARIES}
  @BxProtobuftools_BOOST_LIBRARIES@
  )

message(STATUS "[info] BxProtobuftoolsConfig: BxProtobuftools_DEFINITIONS  = '${BxProtobuftools_DEFINITIONS}'")
message(STATUS "[info] BxProtobuftoolsConfig: BxProtobuftools_INCLUDE_DIRS = '${BxProtobuftools_INCLUDE_DIRS}'")
message(STATUS "[info] BxProtobuftoolsConfig: BxProtobuftools_LIBRARIES    = '${BxProtobuftools_LIBRARIES}'")

message(STATUS "[info] BxProtobuftoolsConfig: Exiting.")

# - end