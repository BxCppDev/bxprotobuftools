# - Config file for the Protobuftools package
# It defines the following variables
#  BxProtobuftools_INCLUDE_DIRS - include directories for Bayeux/Protobuftools
#  BxProtobuftools_DEFINITIONS  - compile definitions needed to use Bayeux/Protobuftools
#  BxProtobuftools_LIBRARIES    - libraries to link against
#  BxProtobuftools_WITH_BOOST   - implements support for some Boost classes
#

#----------------------------------------------------------------------
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Locate ourselves, since all our config files should have been installed
# alongside us...
#
get_filename_component(__bxprotobuftools_config_dir "${CMAKE_CURRENT_LIST_FILE}" PATH)
message(STATUS "BxProtobuftools CMake config in '${__bxprotobuftools_config_dir}'")

#-----------------------------------------------------------------------
# Hard code paths to headers
#

set(BxProtobuftools_INCLUDE_DIR "${__bxprotobuftools_config_dir}/@BXPROTOBUFTOOLS_CMAKEDIR_TO_INCLUDEDIR@")

mark_as_advanced(BxProtobuftools_INCLUDE_DIR)
set(BxProtobuftools_INCLUDE_DIRS
  "${BxProtobuftools_INCLUDE_DIR}"
  "${BxProtobuftools_INCLUDE_DIR}/bayeux"
  "${BxProtobuftools_INCLUDE_DIR}/bayeux/proto")
message(STATUS "BxProtobuftools_INCLUDE_DIRS = '${BxProtobuftools_INCLUDE_DIRS}'")

#-----------------------------------------------------------------------
if(CMAKE_COMPILER_IS_GNUCXX)
  set(CMAKE_CXX_FLAGS -std=c++11)
endif()
set(BxProtobuftools_DEFINITIONS -std=c++11)
message(STATUS "BxProtobuftools_DEFINITIONS = '${BxProtobuftools_DEFINITIONS}'")

#-----------------------------------------------------------------------
# Build option
set(BxProtobuftools_WITH_BOOST @BXPROTOBUFTOOLS_WITH_BOOST@)
message(STATUS "BxProtobuftools_WITH_BOOST = '${BxProtobuftools_WITH_BOOST}'")

#-----------------------------------------------------------------------
# Handle paths/targets for third party deps here...

# - Protobuf
find_package(Protobuf 3.0 REQUIRED)

# - Boost
if (BxProtobuftools_WITH_BOOST)
  find_package(Boost 1.60.0
    REQUIRED
    date_time
    # NO_MODULE
    # PATHS @Boost_DIR@
    # NO_DEFAULT_PATH
    )
endif()

#-----------------------------------------------------------------------
# Append third party include directories to Protobuftools's so exposed
# headers are visible
#
if (BxProtobuftools_WITH_BOOST)
  list(APPEND BxProtobuftools_INCLUDE_DIRS
    ${PROTOBUF_INCLUDE_DIRS}
    ${Boost_INCLUDE_DIRS}
    )
endif()

#-----------------------------------------------------------------------
# Include the file listing all the imported targets.
# This is installed in the same location as us...
#
if(NOT BxProtobuftools_TARGETS_LOADED)
  include("${__bxprotobuftools_config_dir}/BxProtobuftoolsTargets.cmake")
  set(BxProtobuftools_TARGETS_LOADED 1)
endif()

# - Protobuftools itself
set(BxProtobuftools_LIBRARY Bayeux_protobuftools CACHE FILE "BxProtobuftools library (imported)")
set(BxProtobuftools_LIBRARIES
  ${BxProtobuftools_LIBRARY}
  ${PROTOBUF_LIBRARIES}
  )
if (BxProtobuftools_WITH_BOOST)
  list(APPEND BxProtobuftools_LIBRARIES
    ${Boost_DATE_TIME_LIBRARY}
    )
endif()
mark_as_advanced(BxProtobuftools_LIBRARY)
message(STATUS "BxProtobuftools_LIBRARIES = '${BxProtobuftools_LIBRARIES}'")

# - end